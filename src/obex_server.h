/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p obex_server.h:obex_server.cpp -i types.h ../xml/obex_server.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef OBEX_SERVER_H_1317764963
#define OBEX_SERVER_H_1317764963

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "types.h"


/*
 * Proxy class for interface org.openobex.Server
 */
class OrgOpenobexServerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.openobex.Server"; }

public:
    OrgOpenobexServerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgOpenobexServerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Close()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Close"), argumentList);
    }

    inline QDBusPendingReply<QStringMap> GetServerSessionInfo(const QDBusObjectPath &session_object)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(session_object);
        return asyncCallWithArgumentList(QLatin1String("GetServerSessionInfo"), argumentList);
    }

    inline QDBusPendingReply<QStringList> GetServerSessionList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetServerSessionList"), argumentList);
    }

    inline QDBusPendingReply<bool> IsStarted()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("IsStarted"), argumentList);
    }

    inline QDBusPendingReply<> SetOption(const QString &name, const QDBusVariant &value)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(name) << qVariantFromValue(value);
        return asyncCallWithArgumentList(QLatin1String("SetOption"), argumentList);
    }

    inline QDBusPendingReply<> Start(const QString &path, bool allow_write, bool auto_accept)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(path) << qVariantFromValue(allow_write) << qVariantFromValue(auto_accept);
        return asyncCallWithArgumentList(QLatin1String("Start"), argumentList);
    }

    inline QDBusPendingReply<> Stop()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Stop"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Closed();
    void ErrorOccurred(const QString &in0, const QString &in1);
    void SessionCreated(const QDBusObjectPath &in0);
    void SessionRemoved(const QDBusObjectPath &in0);
    void Started();
    void Stopped();
};

namespace org {

  namespace openobex {
    typedef ::OrgOpenobexServerInterface Server;
  }
}
#endif
