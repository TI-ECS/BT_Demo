/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p obex_server_session.h:obex_server_session.cpp -i types.h ../xml/obex_server_session.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef OBEX_SERVER_SESSION_H_1317930236
#define OBEX_SERVER_SESSION_H_1317930236

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "types.h"

/*
 * Proxy class for interface org.openobex.ServerSession
 */
class OrgOpenobexServerSessionInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.openobex.ServerSession"; }

public:
    OrgOpenobexServerSessionInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgOpenobexServerSessionInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Accept()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Accept"), argumentList);
    }

    inline QDBusPendingReply<> Cancel()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Cancel"), argumentList);
    }

    inline QDBusPendingReply<> Disconnect()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Disconnect"), argumentList);
    }

    inline QDBusPendingReply<QStringMap> GetTransferInfo()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetTransferInfo"), argumentList);
    }

    inline QDBusPendingReply<> Reject()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Reject"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Cancelled();
    void Disconnected();
    void ErrorOccurred(const QString &in0, const QString &in1);
    void RemoteDisplayRequested(const QString &in0);
    void TransferCompleted();
    void TransferProgress(qulonglong in0);
    void TransferStarted(const QString &in0, const QString &in1, qulonglong in2);
};

namespace org {
  namespace openobex {
    typedef ::OrgOpenobexServerSessionInterface ServerSession;
  }
}
#endif
